
OpoenRTMプラグインで使用するアイテムについて
=======================

OpenRTMプラグインでは以下のアイテムを使用します。

RTシステムアイテム
----------------------------

| OpenRTMでは、RTコンポーネント(RT-Component:RTC)と呼ばれるRT機能要素を複数使用してロボットシステム(RTシステム)を構築します。
| ｢RTシステムアイテム｣は、ロボットシステム(RTシステム)を管理するためのプロジェクトアイテムで、システムを構成する要素(RTC)をChoreonoid上で管理するために使用します。

RTシステムアイテムでは以下のプロパティが追加で利用できます。

.. .. tabularcolumns:: |p{3.5cm}|p{11.5cm}|

.. list-table::
  :widths: 15,12,4,75
  :header-rows: 1

  * - パラメータ
    - デフォルト値
    - 型
    - 意味
  * - 自動接続
    - True
    - bool
    - アイテム読み込み時に、RTシステムを構成するRTC間の接続を自動で実行するかどうかを指定します。
  * - ベンダ名
    - \-
    - string
    - 対象RTシステムを構築したベンダ名を設定します。ここで設定された値は、システム保存時にRTSProfileの｢VendorName｣として使用されます。デフォルト値は｢設定画面｣で指定可能です。
  * - バージョン番号
    - \-
    - string
    - 対象RTシステムのバージョン番号を設定します。ここで設定された値は、システム保存時にRTSProfileの｢Version｣として使用されます。デフォルト値は｢設定画面｣で指定可能です。
  * - ファイル(プロファイル保存先)
    - \-
    - string
    - OpenRTMプラグインでは、RTシステムの情報をRTSProfile形式(RTミドルウェアで標準化されている形式)を用いて保存します。ここではRTSProfileの保存先を指定します。
  * - 状態検知方法
    - Polling
    - 
    - | RTシステムを構成しているRTCの状態をチェックする方法を設定します。
      | Polling：｢Polling Cycle｣で指定した周期で自動的に各RTCの状態などを更新します。
      | Manual：手動で各RTCの状態などを更新します。
  * - Polling Cycle
    - 1000
    - int
    - RTシステムを構成しているRTCの状態をチェックする周期を設定します。単位はmsです。
  * - 読込時に状態チェック
    - true
    - bool
    - プロジェクトを読み込んだ際に、対象RTシステムを構成するRTコンポーネントの状態チェックを行うかを指定します。RTシステムを構成するRTコンポーネントの数が多い場合や、RTコンポーネントが複数のPC上で動作している場合など、状態チェックに時間が掛かる場合には、この値をOFFとすることでプロジェクト読込時間を短縮することが可能です。


コントローラRTCアイテム
----------------------------

シミュレーション実行時に、RTシステムアイテムで定義したシステムを制御するためのRTCを定義するためのアイテムです。Choreonoidからの指令に応じて、対象システムの制御を行います。

コントローラRTCアイテムでは以下のプロパティが追加で利用できます。

.. .. tabularcolumns:: |p{3.5cm}|p{11.5cm}|

.. list-table::
  :widths: 15,12,75
  :header-rows: 1

  * - パラメータ
    - 型
    - 意味
  * - RTCモジュール
    - string
    - 実際に使用するコントローラRTCの名称を設定します。プロパティ編集時にファイル選択ダイアログが表示されますので、使用するコントローラRTCを選択して指定することも可能です。
  * - ベースディレクトリ
    - string
    - 使用するコントローラRTCが存在するディレクトリを設定します。
  * - RTCインスタンス名
    - string
    - コントローラRTCを識別するためのインスタンス名を設定します。OpenRTMでは同じ型のRTCを複数起動することが可能です。このような場合に、実際に使用するコントローラのインスタンスを識別するために指定します。
  * - 実行コンテキスト
    - string
    - | コントローラRTCで使用する実行コンテキストを指定します。以下の実行コンテキストを選択可能です。
      | SimulationExecutionContext：シミュレーション実行用の実行コンテキストです。
      | SimulationPeriodicExecutionContext：シミュレーション実行時に何らかの周期実行を行うための実行コンテキストです。
  * - 実行周波数
    - int
    - コントローラRTCの実行周期を指定します。


BodyIoRTCアイテム
----------------------------

ロボットに対応するRTCを定義するためのアイテムです。ロボットに搭載されている各種デバイスへの入出力を行うためのRTCを設定します。シミュレーション実行時に、各種デバイスに対する入出力動作を、シミュレーションの進行と同期するための処理が実行されます。

BodyIoRTCアイテムでは以下のプロパティが追加で利用できます。

.. .. tabularcolumns:: |p{3.5cm}|p{11.5cm}|

.. list-table::
  :widths: 15,12,75
  :header-rows: 1

  * - パラメータ
    - 型
    - 意味
  * - RTCモジュール
    - string
    - 対象RTCの名称を設定します。プロパティ編集時にファイル選択ダイアログが表示されますので、使用するRTCを選択して指定することも可能です。
  * - ベースディレクトリ
    - string
    - 対象RTCが存在するディレクトリを設定します。
  * - RTCインスタンス名
    - string
    - 対象RTCを識別するためのインスタンス名を設定します。OpenRTMでは同じ型のRTCを複数起動することが可能です。このような場合に、実際に使用するRTCのインスタンスを識別するために指定します。
  * - 実行周波数
    - int
    - RTCの実行周期を指定します。


RTCアイテム
----------------------------

通常のRTCを使用するためのアイテムです。｢コントローラRTC｣｢ロボット連携用RTC(BodyIoRTC)｣以外のRTCを使用する場合に利用します。

RTCアイテムでは以下のプロパティが追加で利用できます。

.. .. tabularcolumns:: |p{3.5cm}|p{11.5cm}|

.. list-table::
  :widths: 15,12,75
  :header-rows: 1

  * - パラメータ
    - 型
    - 意味
  * - RTCモジュール
    - string
    - 対象RTCの名称を設定します。プロパティ編集時にファイル選択ダイアログが表示されますので、使用するRTCを選択して指定することも可能です。
  * - ベースディレクトリ
    - string
    - 対象RTCが存在するディレクトリを設定します。
  * - 実行コンテキスト
    - string
    - 対象RTCで使用する実行コンテキストを指定します。選択可能な実行コンテキストの種類は、使用しているOpenRTM-aistのバージョンによって異なりますので、詳細はOpenRTM-aistのサイトを参照してください。
  * - 実行周波数
    - int
    - RTCの実行周期を指定します。


BodyRTCアイテム(非推奨)
----------------------------

旧版で、ロボットに対応するRTCを定義するために使用していたアイテムです。｢BodyRTCアイテム｣で行っていた設定は｢BodyIoRTCアイテム｣を使用して定義可能ですので、｢BodyIoRTCアイテム｣を使用するようにしてください。
